@use 'mixins';
@use 'animations';
@use 'variables';

body {
  display: grid;
  grid-template-rows: auto 1fr;
  color: var(--white);
  font-family: 'Cairo', sans-serif;
  background: var(--bg);
}

.l-flexColumn {
  @include mixins.flexColumn;
}

.l-flex {
  display: flex;
}

.l-jC-sb {
  justify-content: space-between;
}

.l-aI-c {
  align-items: center;
}

.hidden {
  display: none;
}

.btn {
  padding: 0.5rem;
  color: var(--white);
  text-align: left;
  font-size: 1.2rem;
  background: none;
  border: none;
  border-radius: 5px;
  transition: background 0.4s ease;
  cursor: pointer;

  &:hover {
    background: var(--btn-hover);
  }
  &--active {
    background: var(--btn-hover);
    color: var(--main);
  }
  &--project,
  &--task {
    padding: 0;
  }

  &--task {
    opacity: 0.3;
    transition: opacity 0.3s ease, transform 0.3s ease;
    &:hover {
      opacity: 1;
      background: none;
    }
    &--active {
      transform: rotate(180deg);
    }
  }

  &--form {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    opacity: 0.6;
    transition: opacity 0.3s ease;
    &:focus {
      opacity: 1;
    }
    &:hover {
      opacity: 1;
      background: var(--bg-aside);
      & .icon--green {
        fill: var(--main);
      }
      & .icon--red {
        fill: var(--secondary);
      }
    }
  }
}

.icon {
  width: 20px;
  height: 20px;
  fill: var(--white);
  transition: fill 0.3s ease;
  &--project {
    opacity: 0;
    transition: opacity 0.3s ease;
  }
}

.printMsg {
  position: absolute;
  right: 0;
  top: 0;
  padding: 2rem 4rem;
  margin: 2rem;
  background: var(--printMsgColor);
  font-size: 1.1rem;
  color: var(--printTextColor, var(--bg));
  font-weight: bold;
  border-radius: 1rem;
  opacity: 0;
  transition: opacity 0.2s ease, transform 0.4s ease;
  transform: translateY(-200%);
  &.fadeIn-up {
    transform: translateY(0);
    opacity: 1;
  }

  &::before {
    content: '';
    position: absolute;
    top: -60px;
    left: 50%;
    margin-left: -2rem;
    border-width: 2rem;
    border-style: solid;
    border-color: var(--printMsgColor) transparent transparent transparent;
    transform: rotate(180deg);
  }
}

.c-form {
  animation: fadeIn 0.3s ease;
  &__text {
    width: 100%;
    margin-top: 0.5rem;
    border: none;
    border-bottom: 1px solid var(--main);
    background: none;
    color: var(--white);
  }
  &__ui {
    display: flex;
    justify-content: center;
    gap: 1rem;
    line-height: 0;
  }
}

.checkbox {
  display: grid;
  grid-template-columns: min-content auto;
  align-items: center;
  gap: 0.4rem;
  font-size: 1rem;
  color: var(--white);
  cursor: pointer;
}

.checkbox__control {
  display: inline-grid;

  width: 1.3em;
  height: 1.3em;
  border-radius: 50%;
  border: 0.1em solid var(--priorityColor);

  svg {
    transition: transform 0.1s ease-in 25ms, opacity 0.1s ease-in 25ms;
    transform: scale(0);
    transform-origin: bottom left;
    stroke: var(--priorityColor);
  }
}

.checkbox__input {
  display: grid;
  grid-template-areas: 'checkbox';
  align-items: center;

  > * {
    grid-area: checkbox;
  }

  input {
    opacity: 0;
    width: 1em;
    height: 1em;
    &:hover + .checkbox__control svg {
      opacity: 0.5;
      transform: scale(1);
    }
    &:checked + .checkbox__control svg {
      transform: scale(1);
      opacity: 1;
    }
  }
}

.overlay {
  position: absolute;
  width: 100vw;
  height: 100vh;
  background: var(--black);
  opacity: 0.8;
  opacity: 0.8;
  z-index: 1;
}

@media only screen and (max-width: variables.$desktop-bp) {
  .printMsg {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    margin: 1rem;
    &::before {
      border-width: 1rem;
      margin-left: -1rem;
      top: -30px;
      left: 50%;
    }
  }
  .icon {
    &--project {
      opacity: 1;
    }
  }
}

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}
